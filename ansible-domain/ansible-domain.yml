---
- name: ansible-domain
  hosts: '{{ target }}'
  gather_facts: yes
  vars:
    ansible_python_interpreter: "{% if foreman is not defined %}/usr/bin/python{% elif foreman.operatingsystem_name.startswith('RedHat 5') %}/usr/bin/python2.6{% else %}/usr/bin/python{% endif %}"
  become: true
  become_user: root
  tasks:
    - name: domain search (NetworkManager or /etc/resolv.conf) (RHEL5/6/7)
      shell: |
        grep --quiet NetworkManager /etc/resolv.conf
        if [[ $? -eq 0 ]]
        then
          # if NetworkManager in /etc/resolv.conf, set DOMAIN line in interface file(s)
          for interfacefile in /etc/sysconfig/network-scripts/ifcfg-eth*
          do
            grep --quiet DOMAIN $interfacefile
            if [[ $? -eq 0 ]]
            then
              # replace entire DOMAIN line if DOMAIN is found
              sed -i -e 's/^DOMAIN=.*/DOMAIN="chadg.net overthepipe.com foo.bar"/' $interfacefile
            else
              # append DOMAIN line if domain is not found
              echo 'DOMAIN="chadg.net overthepipe.com foo.bar"' >> $interfacefile
            fi
          done
          # and restart network service
          /sbin/service network restart
        else
          # if NetworkManager not in /etc/resolv.conf, set search line in /etc/resolv.conf
          grep --quiet search /etc/resolv.conf
          if [[ $? -eq 0 ]]
          then
            # replace entire search line if search is found
            sed -i -e 's/^search.*/search chadg.net overthepipe.com foo.bar/' /etc/resolv.conf
          else
            # append search line if search is not found
            echo 'search chadg.net overthepipe.com foo.bar' >> /etc/resolv.conf
          fi
        fi
      args:
        executable: /bin/bash
      when: foreman is defined and not foreman.operatingsystem_name.startswith('RedHat 8')

    - name: domain search (RHEL8)
      shell: |
        chattr -i /etc/sysconfig/network-scripts/ifcfg-eth0
        nmcli connection modify eth0 ipv4.dns-search "chadg.net overthepipe.com foo.bar"
        chattr +i /etc/sysconfig/network-scripts/ifcfg-eth0
        systemctl restart NetworkManager
      when: foreman is defined and foreman.operatingsystem_name.startswith('RedHat 8')

    - name: domain search (netplan conf) (ubuntu 1804)
      copy:
        dest: "/etc/netplan/99-netcfg-vmware.yaml"
        mode: 0644
        owner: root
        content: |
          # Generated by VMWare customization engine.
          network:
            version: 2
            renderer: networkd
            ethernets:
              ens192:
                dhcp4: no
                dhcp6: no
                addresses:
                  - defaultipaddress/24
                gateway4: defaultgatewayaddress
                nameservers:
                  search: [chadg.net, overthepipe.com, foo.bar]
                  addresses:
                    - 9.9.9.9
                    - 1.0.0.1
      when: ansible_facts['distribution'] == "Ubuntu"

    - name: netplan conf variable 1
      replace:
        path: /etc/netplan/99-netcfg-vmware.yaml
        regexp: 'defaultipaddress'
        replace: '{{ ansible_default_ipv4.address }}'
      when: ansible_facts['distribution'] == "Ubuntu"

    - name: netplan conf variable 2
      replace:
        path: /etc/netplan/99-netcfg-vmware.yaml
        regexp: 'defaultgatewayaddress'
        replace: "{{ ansible_default_ipv4.gateway }}"
      when: ansible_facts['distribution'] == "Ubuntu"

    - name: netplan apply
      shell: |
        netplan generate
        netplan apply
      when: ansible_facts['distribution'] == "Ubuntu"
